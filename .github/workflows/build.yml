name: Build

on:
#  push:
#    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    env:
      WORK_PATH: src/WebApp
      PROJECT_NAME: WebApp.csproj
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    name: Build message distribution server
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install .NET 6
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Install dotnet-version
        run: dotnet tool install -g dotnet-version-cli

      - name: Install jq
        run: sudo apt-get install jq

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Publish
        run: dotnet publish ${{ env.WORK_PATH }}/${{ env.PROJECT_NAME }} --configuration=Release -o artifacts

      - name: Get version
        id: getVersion
        run: |
          cd ${{ env.WORK_PATH }}
          echo "::set-output name=currentVersion::$( dotnet version --dry-run --output-format=json | jq --raw-output .currentVersion )"

      - name: Current assembly version
        run: echo "Current version ${{ steps.getVersion.outputs.currentVersion }}"

      - name: Create tag
        run: |
          git tag v${{ steps.getVersion.outputs.currentVersion }}
          git push origin --tags

      - name: Create asset
        run: |
          mkdir /tmp/assets
          zip -j -r /tmp/assets/message-distribution-server-${{ steps.getVersion.outputs.currentVersion }}.zip artifacts/*
          ls -la /tmp/assets
        
      - name: Create release
        run: gh release create v${{ steps.getVersion.outputs.currentVersion }} "/tmp/assets/message-distribution-server-${{ steps.getVersion.outputs.currentVersion }}.zip#Message distribution server v${{ steps.getVersion.outputs.currentVersion }}" --generate-notes -p

      - name: Bump build WebApp version
        id: bump-webapp
        uses: vers-one/dotnet-project-version-updater@v1.0
        with:
          file: ${{ env.WORK_PATH }}/${{ env.PROJECT_NAME }}
          version: bump-build

      - name: Bump build Server version
        id: bump-server
        uses: vers-one/dotnet-project-version-updater@v1.0
        with:
          file: "src/Server/Server.csproj"
          version: bump-build

      - name: Bump build Client version
        id: bump-client
        uses: vers-one/dotnet-project-version-updater@v1.0
        with:
          file: "src/Client/Client.csproj"
          version: bump-build

      - run: |
          git config user.name "pushnitsa"
          git config user.email "pushnitsa@users.noreply.github.com"
          git add .
          git commit -m "Bump project version to ${{ steps.bump-webapp.outputs.newVersion }}"
          git push
